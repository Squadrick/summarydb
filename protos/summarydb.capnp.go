// Code generated by capnpc-go. DO NOT EDIT.

package protos

import (
	math "math"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type OpType uint16

// OpType_TypeID is the unique identifier for the type OpType.
const OpType_TypeID = 0x86bf862b548c351a

// Values of OpType.
const (
	OpType_count OpType = 0
	OpType_sum   OpType = 1
	OpType_bloom OpType = 2
	OpType_cms   OpType = 3
	OpType_max   OpType = 4
	OpType_freq  OpType = 5
)

// String returns the enum's constant name.
func (c OpType) String() string {
	switch c {
	case OpType_count:
		return "count"
	case OpType_sum:
		return "sum"
	case OpType_bloom:
		return "bloom"
	case OpType_cms:
		return "cms"
	case OpType_max:
		return "max"
	case OpType_freq:
		return "freq"

	default:
		return ""
	}
}

// OpTypeFromString returns the enum value with a name,
// or the zero value if there's no such value.
func OpTypeFromString(c string) OpType {
	switch c {
	case "count":
		return OpType_count
	case "sum":
		return OpType_sum
	case "bloom":
		return OpType_bloom
	case "cms":
		return OpType_cms
	case "max":
		return OpType_max
	case "freq":
		return OpType_freq

	default:
		return 0
	}
}

type OpType_List struct{ capnp.List }

func NewOpType_List(s *capnp.Segment, sz int32) (OpType_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return OpType_List{l.List}, err
}

func (l OpType_List) At(i int) OpType {
	ul := capnp.UInt16List{List: l.List}
	return OpType(ul.At(i))
}

func (l OpType_List) Set(i int, v OpType) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type DataTable struct{ capnp.Struct }

// DataTable_TypeID is the unique identifier for the type DataTable.
const DataTable_TypeID = 0xcb0c4f3a25bf3079

func NewDataTable(s *capnp.Segment) (DataTable, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0})
	return DataTable{st}, err
}

func NewRootDataTable(s *capnp.Segment) (DataTable, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0})
	return DataTable{st}, err
}

func ReadRootDataTable(msg *capnp.Message) (DataTable, error) {
	root, err := msg.RootPtr()
	return DataTable{root.Struct()}, err
}

func (s DataTable) String() string {
	str, _ := text.Marshal(0xcb0c4f3a25bf3079, s.Struct)
	return str
}

func (s DataTable) Count() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s DataTable) SetCount(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s DataTable) Max() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s DataTable) SetMax(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

func (s DataTable) Sum() float64 {
	return math.Float64frombits(s.Struct.Uint64(16))
}

func (s DataTable) SetSum(v float64) {
	s.Struct.SetUint64(16, math.Float64bits(v))
}

// DataTable_List is a list of DataTable.
type DataTable_List struct{ capnp.List }

// NewDataTable creates a new list of DataTable.
func NewDataTable_List(s *capnp.Segment, sz int32) (DataTable_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0}, sz)
	return DataTable_List{l}, err
}

func (s DataTable_List) At(i int) DataTable { return DataTable{s.List.Struct(i)} }

func (s DataTable_List) Set(i int, v DataTable) error { return s.List.SetStruct(i, v.Struct) }

func (s DataTable_List) String() string {
	str, _ := text.MarshalList(0xcb0c4f3a25bf3079, s.List)
	return str
}

// DataTable_Promise is a wrapper for a DataTable promised by a client call.
type DataTable_Promise struct{ *capnp.Pipeline }

func (p DataTable_Promise) Struct() (DataTable, error) {
	s, err := p.Pipeline.Struct()
	return DataTable{s}, err
}

type ProtoSummaryWindow struct{ capnp.Struct }

// ProtoSummaryWindow_TypeID is the unique identifier for the type ProtoSummaryWindow.
const ProtoSummaryWindow_TypeID = 0xd03e3591895dbdfb

func NewProtoSummaryWindow(s *capnp.Segment) (ProtoSummaryWindow, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 32, PointerCount: 1})
	return ProtoSummaryWindow{st}, err
}

func NewRootProtoSummaryWindow(s *capnp.Segment) (ProtoSummaryWindow, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 32, PointerCount: 1})
	return ProtoSummaryWindow{st}, err
}

func ReadRootProtoSummaryWindow(msg *capnp.Message) (ProtoSummaryWindow, error) {
	root, err := msg.RootPtr()
	return ProtoSummaryWindow{root.Struct()}, err
}

func (s ProtoSummaryWindow) String() string {
	str, _ := text.Marshal(0xd03e3591895dbdfb, s.Struct)
	return str
}

func (s ProtoSummaryWindow) Ts() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s ProtoSummaryWindow) SetTs(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

func (s ProtoSummaryWindow) Te() int64 {
	return int64(s.Struct.Uint64(8))
}

func (s ProtoSummaryWindow) SetTe(v int64) {
	s.Struct.SetUint64(8, uint64(v))
}

func (s ProtoSummaryWindow) Cs() int64 {
	return int64(s.Struct.Uint64(16))
}

func (s ProtoSummaryWindow) SetCs(v int64) {
	s.Struct.SetUint64(16, uint64(v))
}

func (s ProtoSummaryWindow) Ce() int64 {
	return int64(s.Struct.Uint64(24))
}

func (s ProtoSummaryWindow) SetCe(v int64) {
	s.Struct.SetUint64(24, uint64(v))
}

func (s ProtoSummaryWindow) OpData() (DataTable, error) {
	p, err := s.Struct.Ptr(0)
	return DataTable{Struct: p.Struct()}, err
}

func (s ProtoSummaryWindow) HasOpData() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s ProtoSummaryWindow) SetOpData(v DataTable) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewOpData sets the opData field to a newly
// allocated DataTable struct, preferring placement in s's segment.
func (s ProtoSummaryWindow) NewOpData() (DataTable, error) {
	ss, err := NewDataTable(s.Struct.Segment())
	if err != nil {
		return DataTable{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// ProtoSummaryWindow_List is a list of ProtoSummaryWindow.
type ProtoSummaryWindow_List struct{ capnp.List }

// NewProtoSummaryWindow creates a new list of ProtoSummaryWindow.
func NewProtoSummaryWindow_List(s *capnp.Segment, sz int32) (ProtoSummaryWindow_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 32, PointerCount: 1}, sz)
	return ProtoSummaryWindow_List{l}, err
}

func (s ProtoSummaryWindow_List) At(i int) ProtoSummaryWindow {
	return ProtoSummaryWindow{s.List.Struct(i)}
}

func (s ProtoSummaryWindow_List) Set(i int, v ProtoSummaryWindow) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s ProtoSummaryWindow_List) String() string {
	str, _ := text.MarshalList(0xd03e3591895dbdfb, s.List)
	return str
}

// ProtoSummaryWindow_Promise is a wrapper for a ProtoSummaryWindow promised by a client call.
type ProtoSummaryWindow_Promise struct{ *capnp.Pipeline }

func (p ProtoSummaryWindow_Promise) Struct() (ProtoSummaryWindow, error) {
	s, err := p.Pipeline.Struct()
	return ProtoSummaryWindow{s}, err
}

func (p ProtoSummaryWindow_Promise) OpData() DataTable_Promise {
	return DataTable_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type ProtoLandmarkWindow struct{ capnp.Struct }

// ProtoLandmarkWindow_TypeID is the unique identifier for the type ProtoLandmarkWindow.
const ProtoLandmarkWindow_TypeID = 0xcdf64d2c4abfe20f

func NewProtoLandmarkWindow(s *capnp.Segment) (ProtoLandmarkWindow, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return ProtoLandmarkWindow{st}, err
}

func NewRootProtoLandmarkWindow(s *capnp.Segment) (ProtoLandmarkWindow, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return ProtoLandmarkWindow{st}, err
}

func ReadRootProtoLandmarkWindow(msg *capnp.Message) (ProtoLandmarkWindow, error) {
	root, err := msg.RootPtr()
	return ProtoLandmarkWindow{root.Struct()}, err
}

func (s ProtoLandmarkWindow) String() string {
	str, _ := text.Marshal(0xcdf64d2c4abfe20f, s.Struct)
	return str
}

func (s ProtoLandmarkWindow) Ts() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s ProtoLandmarkWindow) SetTs(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

func (s ProtoLandmarkWindow) Te() int64 {
	return int64(s.Struct.Uint64(8))
}

func (s ProtoLandmarkWindow) SetTe(v int64) {
	s.Struct.SetUint64(8, uint64(v))
}

func (s ProtoLandmarkWindow) Timestamps() (capnp.Int64List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.Int64List{List: p.List()}, err
}

func (s ProtoLandmarkWindow) HasTimestamps() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s ProtoLandmarkWindow) SetTimestamps(v capnp.Int64List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewTimestamps sets the timestamps field to a newly
// allocated capnp.Int64List, preferring placement in s's segment.
func (s ProtoLandmarkWindow) NewTimestamps(n int32) (capnp.Int64List, error) {
	l, err := capnp.NewInt64List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.Int64List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s ProtoLandmarkWindow) Values() (capnp.Float64List, error) {
	p, err := s.Struct.Ptr(1)
	return capnp.Float64List{List: p.List()}, err
}

func (s ProtoLandmarkWindow) HasValues() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s ProtoLandmarkWindow) SetValues(v capnp.Float64List) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewValues sets the values field to a newly
// allocated capnp.Float64List, preferring placement in s's segment.
func (s ProtoLandmarkWindow) NewValues(n int32) (capnp.Float64List, error) {
	l, err := capnp.NewFloat64List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.Float64List{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

// ProtoLandmarkWindow_List is a list of ProtoLandmarkWindow.
type ProtoLandmarkWindow_List struct{ capnp.List }

// NewProtoLandmarkWindow creates a new list of ProtoLandmarkWindow.
func NewProtoLandmarkWindow_List(s *capnp.Segment, sz int32) (ProtoLandmarkWindow_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2}, sz)
	return ProtoLandmarkWindow_List{l}, err
}

func (s ProtoLandmarkWindow_List) At(i int) ProtoLandmarkWindow {
	return ProtoLandmarkWindow{s.List.Struct(i)}
}

func (s ProtoLandmarkWindow_List) Set(i int, v ProtoLandmarkWindow) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s ProtoLandmarkWindow_List) String() string {
	str, _ := text.MarshalList(0xcdf64d2c4abfe20f, s.List)
	return str
}

// ProtoLandmarkWindow_Promise is a wrapper for a ProtoLandmarkWindow promised by a client call.
type ProtoLandmarkWindow_Promise struct{ *capnp.Pipeline }

func (p ProtoLandmarkWindow_Promise) Struct() (ProtoLandmarkWindow, error) {
	s, err := p.Pipeline.Struct()
	return ProtoLandmarkWindow{s}, err
}

const schema_91f0805429cab961 = "x\xda|\x93\xcfK\x14a\x1c\xc6\x9f\xe7}g\x1aH" +
	"\xd1}q\xc1\xf2\xb2$t\xb0\xa2\xfc\x81\x87<\xa4\x81" +
	"A\x85\xe2\xbe\xb5\x10HA\xaf\xeb\x94\xd2\xce\xce\xb43" +
	"[\x0a\x05\x0a&\x0a\x06\x09Ay\xe8\xe0\xc1s\xe7\x0e" +
	"\xe1\xbd\x08\xfa\x1b\x82\xe8ZA]:L\xbc\xbb:\xbb" +
	"\x08u\xda\xef\xfb\xd9g\xe6\xfby\x86\x99\xc1~N\x88" +
	"!\xf7>\x01\x9ds\x8f\xa5}\xa3[\xa5\xb3\xeb\xfb\xeb" +
	"P\xbd\"5\xef>\x0c\x94V\xbeo\x03T;?\xd5" +
	"\x9e\x07\xa8\xddW`\xba<\xb8\x7fzl\xa6\xf3#t" +
	"/e+\xe6x\xc0\xd0\xd7\xe3T\xbfl\xf2\xc7[0" +
	"\xed\xfe\xb2\x7f\xfd\xdc\xf4\xefO6\xd9vCWx\xc0" +
	"\xc8&g\xd9\xf3\x86\x1e\xd0\xb3\xc3o`\xfa\xe7\xfd\x9d" +
	"\xcd\xed\xd1K\x9fm\xdaiK\xdb\xc8\xc8\xb6\xb8\xc1\x9e" +
	"\xbd\xc6\x85\xbb\xa2@0\x8dja\x12\xc6\x17bQ\x0f" +
	"\x02S[\x9e\x9f;_6Q5\x1a\x9b)D\xa5\xe5" +
	"\xc8/\x92\xfa\x04\x05\xa0.\x0f\x03\xa4\xba\xd8\x0fP\xa8" +
	"!{\x92j\xc0\x9e\x1cu\xca\xfe\xb8\xea\xe4\x19\xa0P" +
	"\x0e\xeb\xd5\xc4\x8b\xebAa\xae\x12\x86\x81W\x0eb/" +
	"0K\xdd\xf7j\xfe\xc3l\x9b<\xb2m\xd2$\xa6d" +
	"\xe6*>`7vJ\x07p\x08\xa8+\xc3\x80\x9e\x90" +
	"\xd4S\x82\x8a\xcc\xd3\xc2k\xfd\x80\x9e\x94\xd4EA%" +
	"D\xbe\xe17m\xe1UI]\x12lJ\xb0\x03\x82\x1d" +
	"\xa0]\x9f\xcdq=8\x9c3\x1b\xe7\x88M\xd1\xf2)" +
	"S\x9d\x0fL\xed\xc1\xad\xc5\xea\xbc\x0c\x1f[\xad\\\xa6" +
	"e\xfa\x00}[R/\xb4i\xf9\x16\xde\x95\xd4\x15A" +
	"\x1eX-\xce\x02zAR\xaf\x09*\xc9<%\xa0V" +
	"\xc7\x00\xfdDR\xbf\x16\x94IL\x17\x82.(\x13\xff" +
	"pL\x93\xc5\xc0\x8f\x13\x13@F1\xbb\xc0\xa2d\xe3" +
	"\xbf.p\xfc\x91\xa9\xd4\xfd\x8cv4\xe9\xff\xcb\xdcl" +
	"B\xdb%d\xa3K>\xeb\xf2\xd4j/\x1d(\x1ev" +
	"Y\xed;P\xdch{\xc4\xcf,\\\x91\xd4[\xb6\x8c" +
	"l\x96\xd9\xb4pMR\xbf\x10\xa4\x93\xa7\x03\xa8\xe7\xb6" +
	"\xe0\x86\xa4~\xf9\xaf\x82\xb2\xdc\xa2\xe5\x8c\x8e\x87\x91}" +
	"\x13\x98k}\x1d s\xe0\xdf\x00\x00\x00\xff\xff\x09J" +
	"\xbc\xb3"

func init() {
	schemas.Register(schema_91f0805429cab961,
		0x86bf862b548c351a,
		0xcb0c4f3a25bf3079,
		0xcdf64d2c4abfe20f,
		0xd03e3591895dbdfb)
}
